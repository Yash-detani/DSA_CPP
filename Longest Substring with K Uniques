You are given a string s consisting only lowercase alphabets and an integer k. Your task is to find the length of the longest substring that contains exactly k distinct characters.

Note : If no such substring exists, return -1. 

code//

class Solution {
  public:
    int longestKSubstr(string &s, int k) {
        // code here
        int l = 0;
        int r = 0;
        int n = s.size();
        int maxLen = 0;
        unordered_map<char,int>mpp;
        
        while(r<n)
        {
            
            mpp[s[r]]++;
            
            while(mpp.size() > k)
            {
                mpp[s[l]]--;
                
                if(mpp[s[l]] == 0)
                mpp.erase(s[l]);
                
                l++;
            }
            
            
            if(mpp.size() == k)
            {
                
                maxLen = max(maxLen , r-l+1);
            }

         r++;   
        }
        
        
        
        return maxLen==0 ? -1 : maxLen;
    }
};
