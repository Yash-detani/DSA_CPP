//Problem
You are given two strings of equal lengths, s1 and s2. The task is to check if s2 is a rotated version of the string s1.

//Code
class Solution {
  public:
  
  vector<int> computeLps(string &pat)
  {
      int n = pat.length();
      
      int len = 0;
      vector<int>lps(n);
      
      lps[0] = 0;
      
      int i=1;
      
      while(i<n)
      {
          if(pat[i] == pat[len])
          {
              len++;
              lps[i] = len;
              i++;
          }
          
          else
          {
              if(len!=0)
              {
                  len = lps[len-1];
              }
              
              else
              {
                  lps[i] = 0;
                  i++;
              }
          }
      }
      return lps;
  }
    // Function to check if two strings are rotations of each other or not.
    
    
    bool areRotations(string &s1, string &s2) {
        // Your code here
        string txt = s1+s1;
        
        vector<int> lps = computeLps(s2);
        
        int n = txt.size();
        int m = s2.size();
        
        int i=0;
        int j=0;
        
        while(i<n)
        {
            if(txt[i] == s2[j])
            {
                i++;
                j++;
                
                if(j == m)
                return true;
            }
            
            else
            {
              if(j!=0)
              j = lps[j-1];
              
              else
              i++;
            }
            
            
        }
        return false;
    }
};
