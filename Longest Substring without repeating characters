class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<char,int> mpp;
        int l = 0;
        int r = 0;
        int len = 0;
        int maxLen = 0;
        int n = s.length();

        while(r<n)
        {
            
            if(mpp.find(s[r]) != mpp.end() && mpp[s[r]] >= l)
            {
                l = mpp[s[r]] + 1;
            }
       
            mpp[s[r]] = r;
            len = r-l+1;
            maxLen = max(maxLen,len);
            r++;
        }
        return maxLen;
    }
};
